void ActorAddOrientUpdate(string lp_statusName, int lp_divisions);
wave WaveLastCreated();
void AIAttackWaveUseUnit(int lp_player, unit lp_unit);
void AIAttackWaveUseGroup(int lp_player, unitgroup lp_unitGroup);
void AIAttackWaveAddEscortUnit(int lp_player, unit lp_unit, unit lp_escort, fixed lp_offset, fixed lp_angle);
void AIAttackWaveAddEscortType(int lp_player, string lp_type, unit lp_escort, fixed lp_offset, fixed lp_angle);
void AIAttackWaveAddWaypoint(int lp_player, point lp_waypoint, bool lp_useTransport);
void AIAttackWaveSend(int lp_player, int lp_time, bool lp_wait);
void AIAttackWaveCancel(wave lp_wave);
void AIAttackWaveSetGatherPoint(int lp_player, point lp_gatherPoint);
void AIAttackWaveSetTargetPlayer(int lp_player, playergroup lp_playerMask);
void AIAttackWaveSetTargetUnit(int lp_player, unit lp_unitTag);
void AIAttackWaveSetTargetUnitGroup(int lp_player, unitgroup lp_unitGroup);
void AIAttackWaveSetTargetUnitPoint(int lp_player, unit lp_unitTag);
void AIAttackWaveSetTargetPoint(int lp_player, point lp_point);
void AIAttackWaveSetTargetMerge(int lp_player, wave lp_wave);
void AIAttackWaveSetTargetPatrol(int lp_player, int lp_replaceType);
void AIAttackWaveSetTargetEscort(int lp_player, unitgroup lp_escortGroup, int lp_replaceType);
void AIAttackWaveSetTargetEscortNL(int lp_player, unitgroup lp_escortGroup, int lp_replaceType);
void AIAttackWaveSetTargetGatherD(int lp_player, int lp_town);
void AIAttackWaveSetTargetGatherO(int lp_player, int lp_town);
void AIAttackWaveSetTargetMelee(int lp_player);
void AIAttackWaveSetTargetMeleeHarass(int lp_player);
void AIAttackWaveSetTargetRegion(int lp_player, region lp_region, int lp_replaceType);
void AIAttackWaveAddUnits4(int lp_easyCount, int lp_normalCount, int lp_hardCount, int lp_expertCount, string lp_unitType);
void AIAttackWaveAddUnits3(int lp_easyCount, int lp_normalCount, int lp_hardCount, string lp_unitType);
void AIAttackWaveSetKeepAlive(int lp_player);
void AIAttackWaveSetGatherEarlyNoReplace(int lp_player);
void AIClearAllBullies(int lp_player);
void AIAddBully(int lp_player, string lp_unitType, point lp_loc, int lp_rebuildCount);
void AISetMinimumBullyCount(int lp_count, string lp_unitType, int lp_player);
void AISetGeneralRebuildCount(int lp_count, bool lp_building, int lp_player);
void AISetSpecificRebuildCount(int lp_count, string lp_unitType, int lp_player);
void AISetBullyAttackWavePercent(int lp_percent, int lp_player);
void AISetBullyRebuildDelay(fixed lp_minDelay, fixed lp_maxDelay, int lp_player);
void AINearestTownBullyRebuild(int lp_player, bool lp_enable);
void AINearestTownLimitWaveGather(int lp_player, bool lp_enable);
void AIToggleBulliesInRegion(int lp_player, region lp_region, bool lp_activate);
void AIResetBullyRebuildCountsInRegion(int lp_player, region lp_region);
wave AIUnitGetWave(unit lp_unit);
unitgroup AIWaveGetUnits(wave lp_wave);
unitgroup AIGetAllEscorts(unit lp_unit);
unitgroup AIGetAllEscortsGroup(unitgroup lp_unitGroup);
unitgroup AIGetUnitsInWavesWithTarget(int lp_player, wavetarget lp_waveTarget);
bool AIIsScriptControlled(unit lp_unit);
bool AIIsNotUsableInWaves(unit lp_unit);
bool AIIsSuicideUnit(unit lp_unit);
point AIRandomSpawnPoint(int lp_player, region lp_region, fixed lp_minDistFromEnemies, fixed lp_maxDistFromEnemies, fixed lp_maxDistFromBuildings);
void AICampaignStart(int lp_player);
void AIGlobalSuicide(int lp_player);
void AISetUnitScriptControlled(unit lp_unit, bool lp_controlled);
void AISetGroupScriptControlled(unitgroup lp_group, bool lp_controlled);
void AISetUnitNotUsableInWaves(unit lp_unit, bool lp_controlled);
void AISetGroupNotUsableInWaves(unitgroup lp_group, bool lp_controlled);
void AISetUnitSuicide(unit lp_unit, bool lp_controlled);
void AISetGroupSuicide(unitgroup lp_group, bool lp_controlled);
void AIRemoveUnitFromAnyWaves(unit lp_unit);
void AIRemoveGroupFromAnyWaves(unitgroup lp_group);
void AIRemoveUnitFromAnyWavesAndSetHome(unit lp_unit, point lp_home);
void AIRemoveGroupFromAnyWavesAndSetHome(unitgroup lp_group, point lp_home);
void AIInitCampaignTowns(int lp_player);
void AIInitCampaignHarvest(int lp_player);
bool AIGetDifficulty(int lp_player, int lp_index);
void AISetDifficulty(int lp_player, int lp_index, bool lp_state);
bool AIIsCampaign(int lp_player);
unit AIGrabUnit(int lp_player, string lp_unitType, int lp_priority, point lp_location);
int AIState(int lp_player, int lp_index);
bool AIGetFlag(int lp_player, int lp_index);
bool AIGetCoopFlag(int lp_player, int lp_index);
bool AIGivingUp(int lp_player);
int AIPathingCostMap(point lp_from, point lp_to);
int AIPathingCostUnit(unit lp_unit, point lp_to, bool lp_type);
point AISelfReinforceDropPoint(int lp_player);
void AIStart(int lp_player, bool lp_mode, int lp_APM);
void AIGoodGame(int lp_player);
void AIMeleeStart(int lp_player);
void AISetAPM(int lp_player, int lp_aPM);
void AIReleaseUnit(unit lp_unit);
void AISetSpecificState(int lp_player, int lp_index, int lp_state);
void AISetAllStates(int lp_player, int lp_state);
void AISetFlag(int lp_player, int lp_index, bool lp_state);
void AISetCoopFlag(int lp_player, int lp_index, bool lp_state);
void AITechFlag(int lp_player, int lp_index, int lp_count, string lp_what, int lp_state);
void AIEvalSetCustomIndex(int lp_index);
void AISetDefenseRadii(int lp_player, fixed lp_maxThreatingRange, fixed lp_buildingCallForHelpRange, fixed lp_threatCallForHelpRange);
int AIGetTownState(int lp_player, int lp_town);
point AIGetTownLocation(int lp_player, int lp_town);
int AIGetClosestTown(int lp_player, point lp_location);
int AIGetNextUnusedTownSlot(int lp_player);
int AIGetBuildingCountInTown(int lp_player, int lp_town, string lp_unit, int lp_countMask);
bool AIIsTownHarvestRunning(int lp_player, int lp_town);
int AIGetCurPeonCount(int lp_player, int lp_town);
int AIGetMinPeonCount(int lp_player, int lp_town);
int AIGetMaxPeonCount(int lp_player, int lp_town);
int AIGetMineralAmountLeft(int lp_player, int lp_town);
int AIGetGasAmountLeft(int lp_player, int lp_town);
int AIGetMineralNumSpots(int lp_player, int lp_town);
int AIGetRawGasNumSpots(int lp_player, int lp_town);
point AIGetGatherLocation(int lp_player, int lp_town);
point AIGetGatherDefLocation(int lp_player, int lp_town);
int AIExpand(int lp_player, point lp_point, string lp_building);
unitgroup AIGetTownThreats(int lp_player, int lp_town);
void AIDeclareTown(int lp_player, int lp_town, point lp_center);
void AISetMainTown(int lp_player, int lp_mainTown);
void AIHarvest(int lp_player, int lp_town);
void AIHarvestRate(int lp_player, int lp_amount);
void AISetGasPeonCountOverride(int lp_player, int lp_town, int lp_desiredPeonCount);
unit AIGetScout(int lp_player, int lp_indexSlot, unit lp_previousUnit);
point AIGetNextScoutLoc(int lp_player);
void AIScout(int lp_player);
void AISetNumScouts(int lp_player, int lp_num);
void AISetScoutTimes(int lp_player, int lp_startLocationTime, int lp_obstructedTime, int lp_mineralsTime, int lp_generalTime);
bool AIHasRes(int lp_player, int lp_minerals, int lp_gas);
int AITechCount(int lp_player, string lp_unitType, int lp_countMask);
int AIKnownUnitCount(int lp_player, int lp_otherPlayer, string lp_unitType);
point AIGetBuildingPlacement(int lp_player, point lp_center, string lp_unitType, int lp_buildFlags);
void AIBuild(int lp_player, int lp_priority, int lp_town, string lp_unitType, int lp_count, int lp_flags);
void AITrain(int lp_player, int lp_priority, int lp_town, string lp_unitType, int lp_count);
void AIResearch(int lp_player, int lp_priority, int lp_town, string lp_upgradeType);
void AIMakeAlways(int lp_player, int lp_priority, int lp_town, string lp_objectType, int lp_count);
void AIMakeOnce(int lp_player, int lp_priority, int lp_town, string lp_objectType, int lp_count);
void AIClearBuildQueue(int lp_player);
void AIClearTrainQueue(int lp_player);
void AIClearResearchQueue(int lp_player);
void AIClearStock(int lp_player);
void AIEnableStock(int lp_player);
void AISetStockEx(int lp_player, int lp_town, int lp_count, string lp_unitType, int lp_buildFlags, int lp_stockFlags);
void AISetStock(int lp_player, int lp_count, string lp_unitType);
void AISetStockOpt(int lp_player, int lp_count, string lp_unitType);
void AISetStockUnitNext(int lp_player, int lp_count, string lp_unitType, bool lp_ignoreIfQueued);
bool AISetStockTown(int lp_player, string lp_townHall, string lp_refinery);
bool AISetStockExpand(int lp_player, string lp_townHall, int lp_count);
void AISetStockAlias(int lp_player, int lp_count, string lp_unitType, string lp_aliasType);
void AISetStockFree(int lp_player, int lp_count, string lp_unitType, string lp_prereq);
void AIDefaultEconomy(int lp_player, string lp_townHall, string lp_refinery, string lp_food, string lp_peon, int lp_cap, bool lp_peonMode);
void AIDefaultExpansion(int lp_player, string lp_townHall, int lp_minerals, int lp_gas, int lp_flags);
string AIDefaultGetMaker(int lp_player, string lp_object);
int AIDefaultGetObjectType(int lp_player, string lp_object);
string AIDefaultGetFirstMissingReq(int lp_player, string lp_object);
string AIDefaultGetFirstUnfinishedReq(int lp_player, string lp_object);
int AIDefaultGetFullMakeTime(int lp_player, string lp_object);
string AIGetBaseName(string lp_objectString);
string AIGetBuildAtName(string lp_objectString);
void AIReqCountAsBuiltObject(int lp_player, string lp_unit);
bool AISameCommand(unit lp_firstUnit, unit lp_secondUnit);
unit AILastAttacker(unit lp_unit);
int AILastAttack(unit lp_unit);
bool AIControlWantsToMove(unit lp_unit);
bool AIIsIgnoredByWave(unit lp_unit);
point AIGetCloakedAttacker(int lp_player);
point AIBestTargetPoint(unitgroup lp_group, int lp_minHits, int lp_damageBase, fixed lp_minScore, fixed lp_radius, point lp_from, fixed lp_range, int lp_bonusAttribute);
unitgroup AIFindUnits(int lp_player, string lp_unitType, point lp_centerPoint, fixed lp_withinRange, int lp_maxCount);
unit AIDefaultCombatPriority(unitgroup lp_attackers, unitgroup lp_enemies, int lp_maxAttackersLimit);
bool AICombatDiffFlagCatSpecialHighPrio(int lp_player, int lp_action);
bool AICombatDiffFlagCatSplashHighPrio(int lp_player, int lp_action);
bool AICombatDiffFlagCatTimedLowPrio(int lp_player, int lp_action);
bool AICombatDiffFlagCatWorkersNormalPrio(int lp_player, int lp_action);
bool AICombatDiffFlagCatSortBuildingsPrio(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakHealers(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakLowHP(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakBonusDamage(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakInjured(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakDetector(int lp_player, int lp_action);
bool AICombatDiffFlagTieBreakRange(int lp_player, int lp_action);
bool AIIsTacticalDisabled(unit lp_unit);
void AISetIgnoredByWave(unit lp_unit, bool lp_enable);
void AIClearCloakedAttacker(int lp_player, point lp_point);
int AICast(unit lp_unit, order lp_order, marker lp_marker, bool lp_retreat);
int AICastFlee(unit lp_who, unit lp_from, int lp_distance, marker lp_marker);
void AIBaseThink(unit lp_unit, unitgroup lp_candidates);
void AISetUnitTacticalDisabled(unit lp_unit, bool lp_controlled);
void AISetGroupTacticalDisabled(unitgroup lp_group, bool lp_controlled);
void AITransportSetReturn(int lp_player, point lp_location);
void AITransportSetPanic(int lp_player, fixed lp_value);
void AITransportDisableAutoPickup(int lp_player);
waveinfo AIWaveInfoCreate();
waveinfo AIWaveInfo(wave lp_wave);
wave AIWaveCreate(waveinfo lp_waveInfo, int lp_player, point lp_stagingPoint);
int AIWaveUnitCount(wave lp_w);
int AIWaveState(wave lp_waveRef);
wavetarget AIWaveTargetUnit(unit lp_unit);
wavetarget AIWaveTargetUnitGroup(unitgroup lp_unitGroup);
wavetarget AIWaveTargetUnitPoint(unit lp_unit);
wavetarget AIWaveTargetPoint(point lp_p);
wavetarget AIWaveTargetPlayer(playergroup lp_player);
wavetarget AIWaveTargetMelee(int lp_player);
wavetarget AIWaveTargetMeleeHarass(int lp_player);
wavetarget AIWaveTargetMerge(wave lp_wave);
wavetarget AIWaveTargetPatrol(int lp_replaceType);
wavetarget AIWaveTargetEscort(unitgroup lp_unitGroup, int lp_replaceType);
wavetarget AIWaveTargetEscortNL(unitgroup lp_unitGroup, int lp_replaceType);
wavetarget AIWaveTargetGatherO(int lp_player, int lp_town);
wavetarget AIWaveTargetGatherD(int lp_player, int lp_town);
wavetarget AIWaveHarassRetreat(int lp_player, wave lp_wave, fixed lp_range);
wavetarget AIWaveTargetRegion(region lp_region, int lp_replaceType);
wavetarget AIWaveGetTarget(wave lp_wave);
bool AIWaveIsInCombat(wave lp_waveRef);
int AIWaveGetTimeInCombat(wave lp_waveRef);
int AIWaveGetTimeSinceCombat(wave lp_waveRef);
int AIWaveGetTimeSinceOrdered(wave lp_waveRef);
int AIWaveEval(wave lp_waveRef);
int AIWaveEvalRatio(wave lp_waveRef, fixed lp_range);
int AIEvalRatio(int lp_player);
wave AIWaveGet(int lp_player, int lp_waveIndex);
int AIWaveType(wave lp_waveRef);
point AIGetBestTarget(int lp_player, playergroup lp_enemies, point lp_gatherPoint, int lp_flags);
string AIWaveToString(wave lp_w);
text AIWaveToText(wave lp_w);
void AIWaveInfoAdd(waveinfo lp_waveInfo, string lp_unitType, int lp_count);
int AIWaveInfoAttack(waveinfo lp_waveInfo, int lp_player, point lp_from, wavetarget lp_target, int lp_time);
int AIWaveInfoSuicide(waveinfo lp_waveInfo, int lp_player, point lp_from, wavetarget lp_target, int lp_time);
void AIWaveAddUnit(wave lp_wave, unit lp_unit);
void AIWaveAddUnitPriority(wave lp_wave, unit lp_unit, int lp_priority);
void AIWaveRemoveUnit(wave lp_wave, unit lp_unit);
void AIWaveSetType(wave lp_wave, int lp_type, wavetarget lp_target);
void AIWaveDelete(wave lp_w);
void AIWaveTargetAddWaypoint(wavetarget lp_target, point lp_waypoint, bool lp_useTransport, int lp_index);
void AIWaveTargetClearWaypoints(wavetarget lp_wt);
void AIWaveSet(int lp_player, int lp_waveName, wave lp_wave);
void AIWaveMerge(int lp_player, int lp_waveFrom, int lp_waveInto);
aifilter AIFilter(int lp_player);
unitgroup AIGetFilterGroup(aifilter lp_filter, unitgroup lp_candidates);
void AISetFilterAlliance(aifilter lp_filter, int lp_alliance);
void AISetFilterMarker(aifilter lp_filter, int lp_min, int lp_max, marker lp_marker);
void AISetFilterSelf(aifilter lp_filter, unit lp_self);
void AISetFilterRange(aifilter lp_filter, unit lp_aroundUnit, fixed lp_radius);
void AISetFilterLife(aifilter lp_filter, fixed lp_min, fixed lp_max);
void AISetFilterLifeSortReference(aifilter lp_filter, fixed lp_vitality, fixed lp_threshold);
void AISetFilterLifeMod(aifilter lp_filter, int lp_attribute, fixed lp_amount);
void AISetFilterLifePerMarker(aifilter lp_filter, fixed lp_each, marker lp_marker);
void AISetFilterPlane(aifilter lp_filter, int lp_plane);
void AISetFilterBits(aifilter lp_filter, unitfilter lp_unitFilter);
void AISetFilterShields(aifilter lp_filter, fixed lp_min, fixed lp_max);
int AILaneWaypointGetClosestLane(point lp_testPoint);
int AILaneWaypointGetCalcDataClosestWaypointIndex();
int AILaneWaypointGetCalcDataSecondWaypointIndex();
point AILaneWaypointGetCalcDataClosestPoint();
fixed AILaneWaypointGetCalcDataClosestDist();
void AILaneWaypointClearAll();
void AILaneWaypointAdd(int lp_lane, point lp_waypoint);
void AILaneWaypointCalcClosestDataForLane(int lp_testLane, point lp_testPoint);
string ConversationDataActiveLine();
void CutsceneAddGlobalFilter(string lp_inFilter);
void CutsceneAddFilter(int lp_inCutscene, string lp_inFilter);
void CutsceneRemoveGlobalFilter(string lp_inFilter);
void CutsceneRemoveFilter(int lp_inCutscene, string lp_inFilter);
void CutsceneClearGlobalFilters();
void CutsceneClearFilters(int lp_inCutscene);
int CutsceneCreateNoPosition(string lp_inFilePath, playergroup lp_players, bool lp_inAutoPlay);
void CutsceneShow(int lp_inCutscene, bool lp_inShow);
void CutsceneFade(bool lp_fadeIn, fixed lp_duration, color lp_color, fixed lp_amount, playergroup lp_players, bool lp_inWaitUntilDone);
void DialogControlSetMinXVisible(int lp_graph, playergroup lp_players, fixed lp_minXValue);
fixed DialogControlGetMinXValue(int lp_graph, playergroup lp_players);
void DialogControlSetMaxXVisible(int lp_graph, playergroup lp_players, fixed lp_maxXValue);
fixed DialogControlGetMaxXValue(int lp_graph, playergroup lp_players);
void DialogControlSetMinYVisible(int lp_graph, playergroup lp_players, fixed lp_minYValue);
fixed DialogControlGetMinYValue(int lp_graph, playergroup lp_players);
void DialogControlSetMaxYVisible(int lp_graph, playergroup lp_players, fixed lp_maxYValue);
fixed DialogControlGetMaxYValue(int lp_graph, playergroup lp_players);
unit EventPlayerEffectUsedUnitImpact();
unit EventPlayerEffectUsedUnitLaunch();
void GameSetQuitOnQuitButton(bool lp_enable);
void PlayerOptionOverride(int lp_p, string lp_option, string lp_value);
void SoundtrackSetShuffle(playergroup lp_players, int lp_category, bool lp_cue, bool lp_index);
int StatEventCreate(string lp_eventName);
void StatEventAddDataString(int lp_statEvent, string lp_key, string lp_value);
void StatEventAddDataInt(int lp_statEvent, string lp_key, int lp_value);
void StatEventAddDataFixed(int lp_statEvent, string lp_key, fixed lp_value);
void StatEventSend(int lp_statEvent);
int StatEventLastCreated();
int TransmissionSendForPlayerSelect(playergroup lp_Players, transmissionsource lp_Source, int lp_Target, string lp_portraitActor, string lp_PortraitAnim, soundlink lp_Sound, text lp_Speaker, text lp_Subtitle, fixed lp_Duration, int lp_DurationType, bool lp_WaitUntilDone, int lp_player, bool lp_isSelect);
void UISetMiniMapBounds(playergroup lp_players, region lp_bounds);
fixed UnitOrderGetProgress(unit lp_unit);
fixed UnitBehaviorDurationTotal(unit lp_unit, string lp_behavior);