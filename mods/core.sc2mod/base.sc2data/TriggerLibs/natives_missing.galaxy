native void ActorAddOrientUpdate(string lp_statusName, int lp_divisions);
native wave WaveLastCreated();
native void AIAttackWaveUseUnit(int lp_player, unit lp_unit);
native void AIAttackWaveUseGroup(int lp_player, unitgroup lp_unitGroup);
native void AIAttackWaveAddEscortUnit(int lp_player, unit lp_unit, unit lp_escort, fixed lp_offset, fixed lp_angle);
native void AIAttackWaveAddEscortType(int lp_player, string lp_type, unit lp_escort, fixed lp_offset, fixed lp_angle);
native void AIAttackWaveAddWaypoint(int lp_player, point lp_waypoint, bool lp_useTransport);
native void AIAttackWaveSend(int lp_player, int lp_time, bool lp_wait);
native void AIAttackWaveCancel(wave lp_wave);
native void AIAttackWaveSetGatherPoint(int lp_player, point lp_gatherPoint);
native void AIAttackWaveSetTargetPlayer(int lp_player, playergroup lp_playerMask);
native void AIAttackWaveSetTargetUnit(int lp_player, unit lp_unitTag);
native void AIAttackWaveSetTargetUnitGroup(int lp_player, unitgroup lp_unitGroup);
native void AIAttackWaveSetTargetUnitPoint(int lp_player, unit lp_unitTag);
native void AIAttackWaveSetTargetPoint(int lp_player, point lp_point);
native void AIAttackWaveSetTargetMerge(int lp_player, wave lp_wave);
native void AIAttackWaveSetTargetPatrol(int lp_player, int lp_replaceType);
native void AIAttackWaveSetTargetEscort(int lp_player, unitgroup lp_escortGroup, int lp_replaceType);
native void AIAttackWaveSetTargetEscortNL(int lp_player, unitgroup lp_escortGroup, int lp_replaceType);
native void AIAttackWaveSetTargetGatherD(int lp_player, int lp_town);
native void AIAttackWaveSetTargetGatherO(int lp_player, int lp_town);
native void AIAttackWaveSetTargetMelee(int lp_player);
native void AIAttackWaveSetTargetMeleeHarass(int lp_player);
native void AIAttackWaveSetTargetRegion(int lp_player, region lp_region, int lp_replaceType);
native void AIAttackWaveAddUnits4(int lp_easyCount, int lp_normalCount, int lp_hardCount, int lp_expertCount, string lp_unitType);
native void AIAttackWaveAddUnits3(int lp_easyCount, int lp_normalCount, int lp_hardCount, string lp_unitType);
native void AIAttackWaveSetKeepAlive(int lp_player);
native void AIAttackWaveSetGatherEarlyNoReplace(int lp_player);
native void AIClearAllBullies(int lp_player);
native void AIAddBully(int lp_player, string lp_unitType, point lp_loc, int lp_rebuildCount);
native void AISetMinimumBullyCount(int lp_count, string lp_unitType, int lp_player);
native void AISetGeneralRebuildCount(int lp_count, bool lp_building, int lp_player);
native void AISetSpecificRebuildCount(int lp_count, string lp_unitType, int lp_player);
native void AISetBullyAttackWavePercent(int lp_percent, int lp_player);
native void AISetBullyRebuildDelay(fixed lp_minDelay, fixed lp_maxDelay, int lp_player);
native void AINearestTownBullyRebuild(int lp_player, bool lp_enable);
native void AINearestTownLimitWaveGather(int lp_player, bool lp_enable);
native void AIToggleBulliesInRegion(int lp_player, region lp_region, bool lp_activate);
native void AIResetBullyRebuildCountsInRegion(int lp_player, region lp_region);
native wave AIUnitGetWave(unit lp_unit);
native unitgroup AIWaveGetUnits(wave lp_wave);
native unitgroup AIGetAllEscorts(unit lp_unit);
native unitgroup AIGetAllEscortsGroup(unitgroup lp_unitGroup);
native unitgroup AIGetUnitsInWavesWithTarget(int lp_player, wavetarget lp_waveTarget);
native bool AIIsScriptControlled(unit lp_unit);
native bool AIIsNotUsableInWaves(unit lp_unit);
native bool AIIsSuicideUnit(unit lp_unit);
native point AIRandomSpawnPoint(int lp_player, region lp_region, fixed lp_minDistFromEnemies, fixed lp_maxDistFromEnemies, fixed lp_maxDistFromBuildings);
native void AICampaignStart(int lp_player);
native void AIGlobalSuicide(int lp_player);
native void AISetUnitScriptControlled(unit lp_unit, bool lp_controlled);
native void AISetGroupScriptControlled(unitgroup lp_group, bool lp_controlled);
native void AISetUnitNotUsableInWaves(unit lp_unit, bool lp_controlled);
native void AISetGroupNotUsableInWaves(unitgroup lp_group, bool lp_controlled);
native void AISetUnitSuicide(unit lp_unit, bool lp_controlled);
native void AISetGroupSuicide(unitgroup lp_group, bool lp_controlled);
native void AIRemoveUnitFromAnyWaves(unit lp_unit);
native void AIRemoveGroupFromAnyWaves(unitgroup lp_group);
native void AIRemoveUnitFromAnyWavesAndSetHome(unit lp_unit, point lp_home);
native void AIRemoveGroupFromAnyWavesAndSetHome(unitgroup lp_group, point lp_home);
native void AIInitCampaignTowns(int lp_player);
native void AIInitCampaignHarvest(int lp_player);
native bool AIGetDifficulty(int lp_player, int lp_index);
native void AISetDifficulty(int lp_player, int lp_index, bool lp_state);
native bool AIIsCampaign(int lp_player);
native unit AIGrabUnit(int lp_player, string lp_unitType, int lp_priority, point lp_location);
native int AIState(int lp_player, int lp_index);
native bool AIGetFlag(int lp_player, int lp_index);
native bool AIGetCoopFlag(int lp_player, int lp_index);
native bool AIGivingUp(int lp_player);
native int AIPathingCostMap(point lp_from, point lp_to);
native int AIPathingCostUnit(unit lp_unit, point lp_to, bool lp_type);
native point AISelfReinforceDropPoint(int lp_player);
native void AIStart(int lp_player, bool lp_mode, int lp_APM);
native void AIGoodGame(int lp_player);
native void AIMeleeStart(int lp_player);
native void AISetAPM(int lp_player, int lp_aPM);
native void AIReleaseUnit(unit lp_unit);
native void AISetSpecificState(int lp_player, int lp_index, int lp_state);
native void AISetAllStates(int lp_player, int lp_state);
native void AISetFlag(int lp_player, int lp_index, bool lp_state);
native void AISetCoopFlag(int lp_player, int lp_index, bool lp_state);
native void AITechFlag(int lp_player, int lp_index, int lp_count, string lp_what, int lp_state);
native void AIEvalSetCustomIndex(int lp_index);
native void AISetDefenseRadii(int lp_player, fixed lp_maxThreatingRange, fixed lp_buildingCallForHelpRange, fixed lp_threatCallForHelpRange);
native int AIGetTownState(int lp_player, int lp_town);
native point AIGetTownLocation(int lp_player, int lp_town);
native int AIGetClosestTown(int lp_player, point lp_location);
native int AIGetNextUnusedTownSlot(int lp_player);
native int AIGetBuildingCountInTown(int lp_player, int lp_town, string lp_unit, int lp_countMask);
native bool AIIsTownHarvestRunning(int lp_player, int lp_town);
native int AIGetCurPeonCount(int lp_player, int lp_town);
native int AIGetMinPeonCount(int lp_player, int lp_town);
native int AIGetMaxPeonCount(int lp_player, int lp_town);
native int AIGetMineralAmountLeft(int lp_player, int lp_town);
native int AIGetGasAmountLeft(int lp_player, int lp_town);
native int AIGetMineralNumSpots(int lp_player, int lp_town);
native int AIGetRawGasNumSpots(int lp_player, int lp_town);
native point AIGetGatherLocation(int lp_player, int lp_town);
native point AIGetGatherDefLocation(int lp_player, int lp_town);
native int AIExpand(int lp_player, point lp_point, string lp_building);
native unitgroup AIGetTownThreats(int lp_player, int lp_town);
native void AIDeclareTown(int lp_player, int lp_town, point lp_center);
native void AISetMainTown(int lp_player, int lp_mainTown);
native void AIHarvest(int lp_player, int lp_town);
native void AIHarvestRate(int lp_player, int lp_amount);
native void AISetGasPeonCountOverride(int lp_player, int lp_town, int lp_desiredPeonCount);
native unit AIGetScout(int lp_player, int lp_indexSlot, unit lp_previousUnit);
native point AIGetNextScoutLoc(int lp_player);
native void AIScout(int lp_player);
native void AISetNumScouts(int lp_player, int lp_num);
native void AISetScoutTimes(int lp_player, int lp_startLocationTime, int lp_obstructedTime, int lp_mineralsTime, int lp_generalTime);
native bool AIHasRes(int lp_player, int lp_minerals, int lp_gas);
native int AITechCount(int lp_player, string lp_unitType, int lp_countMask);
native int AIKnownUnitCount(int lp_player, int lp_otherPlayer, string lp_unitType);
native point AIGetBuildingPlacement(int lp_player, point lp_center, string lp_unitType, int lp_buildFlags);
native void AIBuild(int lp_player, int lp_priority, int lp_town, string lp_unitType, int lp_count, int lp_flags);
native void AITrain(int lp_player, int lp_priority, int lp_town, string lp_unitType, int lp_count);
native void AIResearch(int lp_player, int lp_priority, int lp_town, string lp_upgradeType);
native void AIMakeAlways(int lp_player, int lp_priority, int lp_town, string lp_objectType, int lp_count);
native void AIMakeOnce(int lp_player, int lp_priority, int lp_town, string lp_objectType, int lp_count);
native void AIClearBuildQueue(int lp_player);
native void AIClearTrainQueue(int lp_player);
native void AIClearResearchQueue(int lp_player);
native void AIClearStock(int lp_player);
native void AIEnableStock(int lp_player);
native void AISetStockEx(int lp_player, int lp_town, int lp_count, string lp_unitType, int lp_buildFlags, int lp_stockFlags);
native void AISetStock(int lp_player, int lp_count, string lp_unitType);
native void AISetStockOpt(int lp_player, int lp_count, string lp_unitType);
native void AISetStockUnitNext(int lp_player, int lp_count, string lp_unitType, bool lp_ignoreIfQueued);
native bool AISetStockTown(int lp_player, string lp_townHall, string lp_refinery);
native bool AISetStockExpand(int lp_player, string lp_townHall, int lp_count);
native void AISetStockAlias(int lp_player, int lp_count, string lp_unitType, string lp_aliasType);
native void AISetStockFree(int lp_player, int lp_count, string lp_unitType, string lp_prereq);
native void AIDefaultEconomy(int lp_player, string lp_townHall, string lp_refinery, string lp_food, string lp_peon, int lp_cap, bool lp_peonMode);
native void AIDefaultExpansion(int lp_player, string lp_townHall, int lp_minerals, int lp_gas, int lp_flags);
native string AIDefaultGetMaker(int lp_player, string lp_object);
native int AIDefaultGetObjectType(int lp_player, string lp_object);
native string AIDefaultGetFirstMissingReq(int lp_player, string lp_object);
native string AIDefaultGetFirstUnfinishedReq(int lp_player, string lp_object);
native int AIDefaultGetFullMakeTime(int lp_player, string lp_object);
native string AIGetBaseName(string lp_objectString);
native string AIGetBuildAtName(string lp_objectString);
native void AIReqCountAsBuiltObject(int lp_player, string lp_unit);
native bool AISameCommand(unit lp_firstUnit, unit lp_secondUnit);
native unit AILastAttacker(unit lp_unit);
native int AILastAttack(unit lp_unit);
native bool AIControlWantsToMove(unit lp_unit);
native bool AIIsIgnoredByWave(unit lp_unit);
native point AIGetCloakedAttacker(int lp_player);
native point AIBestTargetPoint(unitgroup lp_group, int lp_minHits, int lp_damageBase, fixed lp_minScore, fixed lp_radius, point lp_from, fixed lp_range, int lp_bonusAttribute);
native unitgroup AIFindUnits(int lp_player, string lp_unitType, point lp_centerPoint, fixed lp_withinRange, int lp_maxCount);
native unit AIDefaultCombatPriority(unitgroup lp_attackers, unitgroup lp_enemies, int lp_maxAttackersLimit);
native bool AICombatDiffFlagCatSpecialHighPrio(int lp_player, int lp_action);
native bool AICombatDiffFlagCatSplashHighPrio(int lp_player, int lp_action);
native bool AICombatDiffFlagCatTimedLowPrio(int lp_player, int lp_action);
native bool AICombatDiffFlagCatWorkersNormalPrio(int lp_player, int lp_action);
native bool AICombatDiffFlagCatSortBuildingsPrio(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakHealers(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakLowHP(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakBonusDamage(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakInjured(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakDetector(int lp_player, int lp_action);
native bool AICombatDiffFlagTieBreakRange(int lp_player, int lp_action);
native bool AIIsTacticalDisabled(unit lp_unit);
native void AISetIgnoredByWave(unit lp_unit, bool lp_enable);
native void AIClearCloakedAttacker(int lp_player, point lp_point);
native int AICast(unit lp_unit, order lp_order, marker lp_marker, bool lp_retreat);
native int AICastFlee(unit lp_who, unit lp_from, int lp_distance, marker lp_marker);
native void AIBaseThink(unit lp_unit, unitgroup lp_candidates);
native void AISetUnitTacticalDisabled(unit lp_unit, bool lp_controlled);
native void AISetGroupTacticalDisabled(unitgroup lp_group, bool lp_controlled);
native void AITransportSetReturn(int lp_player, point lp_location);
native void AITransportSetPanic(int lp_player, fixed lp_value);
native void AITransportDisableAutoPickup(int lp_player);
native waveinfo AIWaveInfoCreate();
native waveinfo AIWaveInfo(wave lp_wave);
native wave AIWaveCreate(waveinfo lp_waveInfo, int lp_player, point lp_stagingPoint);
native int AIWaveUnitCount(wave lp_w);
native int AIWaveState(wave lp_waveRef);
native wavetarget AIWaveTargetUnit(unit lp_unit);
native wavetarget AIWaveTargetUnitGroup(unitgroup lp_unitGroup);
native wavetarget AIWaveTargetUnitPoint(unit lp_unit);
native wavetarget AIWaveTargetPoint(point lp_p);
native wavetarget AIWaveTargetPlayer(playergroup lp_player);
native wavetarget AIWaveTargetMelee(int lp_player);
native wavetarget AIWaveTargetMeleeHarass(int lp_player);
native wavetarget AIWaveTargetMerge(wave lp_wave);
native wavetarget AIWaveTargetPatrol(int lp_replaceType);
native wavetarget AIWaveTargetEscort(unitgroup lp_unitGroup, int lp_replaceType);
native wavetarget AIWaveTargetEscortNL(unitgroup lp_unitGroup, int lp_replaceType);
native wavetarget AIWaveTargetGatherO(int lp_player, int lp_town);
native wavetarget AIWaveTargetGatherD(int lp_player, int lp_town);
native wavetarget AIWaveHarassRetreat(int lp_player, wave lp_wave, fixed lp_range);
native wavetarget AIWaveTargetRegion(region lp_region, int lp_replaceType);
native wavetarget AIWaveGetTarget(wave lp_wave);
native bool AIWaveIsInCombat(wave lp_waveRef);
native int AIWaveGetTimeInCombat(wave lp_waveRef);
native int AIWaveGetTimeSinceCombat(wave lp_waveRef);
native int AIWaveGetTimeSinceOrdered(wave lp_waveRef);
native int AIWaveEval(wave lp_waveRef);
native int AIWaveEvalRatio(wave lp_waveRef, fixed lp_range);
native int AIEvalRatio(int lp_player);
native wave AIWaveGet(int lp_player, int lp_waveIndex);
native int AIWaveType(wave lp_waveRef);
native point AIGetBestTarget(int lp_player, playergroup lp_enemies, point lp_gatherPoint, int lp_flags);
native string AIWaveToString(wave lp_w);
native text AIWaveToText(wave lp_w);
native void AIWaveInfoAdd(waveinfo lp_waveInfo, string lp_unitType, int lp_count);
native int AIWaveInfoAttack(waveinfo lp_waveInfo, int lp_player, point lp_from, wavetarget lp_target, int lp_time);
native int AIWaveInfoSuicide(waveinfo lp_waveInfo, int lp_player, point lp_from, wavetarget lp_target, int lp_time);
native void AIWaveAddUnit(wave lp_wave, unit lp_unit);
native void AIWaveAddUnitPriority(wave lp_wave, unit lp_unit, int lp_priority);
native void AIWaveRemoveUnit(wave lp_wave, unit lp_unit);
native void AIWaveSetType(wave lp_wave, int lp_type, wavetarget lp_target);
native void AIWaveDelete(wave lp_w);
native void AIWaveTargetAddWaypoint(wavetarget lp_target, point lp_waypoint, bool lp_useTransport, int lp_index);
native void AIWaveTargetClearWaypoints(wavetarget lp_wt);
native void AIWaveSet(int lp_player, int lp_waveName, wave lp_wave);
native void AIWaveMerge(int lp_player, int lp_waveFrom, int lp_waveInto);
native aifilter AIFilter(int lp_player);
native unitgroup AIGetFilterGroup(aifilter lp_filter, unitgroup lp_candidates);
native void AISetFilterAlliance(aifilter lp_filter, int lp_alliance);
native void AISetFilterMarker(aifilter lp_filter, int lp_min, int lp_max, marker lp_marker);
native void AISetFilterSelf(aifilter lp_filter, unit lp_self);
native void AISetFilterRange(aifilter lp_filter, unit lp_aroundUnit, fixed lp_radius);
native void AISetFilterLife(aifilter lp_filter, fixed lp_min, fixed lp_max);
native void AISetFilterLifeSortReference(aifilter lp_filter, fixed lp_vitality, fixed lp_threshold);
native void AISetFilterLifeMod(aifilter lp_filter, int lp_attribute, fixed lp_amount);
native void AISetFilterLifePerMarker(aifilter lp_filter, fixed lp_each, marker lp_marker);
native void AISetFilterPlane(aifilter lp_filter, int lp_plane);
native void AISetFilterBits(aifilter lp_filter, unitfilter lp_unitFilter);
native void AISetFilterShields(aifilter lp_filter, fixed lp_min, fixed lp_max);
native int AILaneWaypointGetClosestLane(point lp_testPoint);
native int AILaneWaypointGetCalcDataClosestWaypointIndex();
native int AILaneWaypointGetCalcDataSecondWaypointIndex();
native point AILaneWaypointGetCalcDataClosestPoint();
native fixed AILaneWaypointGetCalcDataClosestDist();
native void AILaneWaypointClearAll();
native void AILaneWaypointAdd(int lp_lane, point lp_waypoint);
native void AILaneWaypointCalcClosestDataForLane(int lp_testLane, point lp_testPoint);
native void BankRestore(bank lp_originalBank, int lp_playerId, int lp_backupId);
native void BankBackup(bank lp_toBackUp, int lp_playerId);
native string ConversationDataActiveLine();
native void CutsceneAddGlobalFilter(string lp_inFilter);
native void CutsceneAddFilter(int lp_inCutscene, string lp_inFilter);
native void CutsceneRemoveGlobalFilter(string lp_inFilter);
native void CutsceneRemoveFilter(int lp_inCutscene, string lp_inFilter);
native void CutsceneClearGlobalFilters();
native void CutsceneClearFilters(int lp_inCutscene);
native int CutsceneCreateNoPosition(string lp_inFilePath, playergroup lp_players, bool lp_inAutoPlay);
native void CutsceneShow(int lp_inCutscene, bool lp_inShow);
native void CutsceneFade(bool lp_fadeIn, fixed lp_duration, color lp_color, fixed lp_amount, playergroup lp_players, bool lp_inWaitUntilDone);
native void DialogControlSetMinXVisible(int lp_graph, playergroup lp_players, fixed lp_minXValue);
native fixed DialogControlGetMinXValue(int lp_graph, playergroup lp_players);
native void DialogControlSetMaxXVisible(int lp_graph, playergroup lp_players, fixed lp_maxXValue);
native fixed DialogControlGetMaxXValue(int lp_graph, playergroup lp_players);
native void DialogControlSetMinYVisible(int lp_graph, playergroup lp_players, fixed lp_minYValue);
native fixed DialogControlGetMinYValue(int lp_graph, playergroup lp_players);
native void DialogControlSetMaxYVisible(int lp_graph, playergroup lp_players, fixed lp_maxYValue);
native fixed DialogControlGetMaxYValue(int lp_graph, playergroup lp_players);
native unit EventPlayerEffectUsedUnitImpact();
native unit EventPlayerEffectUsedUnitLaunch();
native void GameSetQuitOnQuitButton(bool lp_enable);
native int IntLoopCurrentDeprecated();
native void PlayerOptionOverride(int lp_p, string lp_option, string lp_value);
native int PlayerGroupLoopCurrentDeprecated();
native void SoundtrackSetShuffle(playergroup lp_players, int lp_category, bool lp_cue, bool lp_index);
native int StatEventCreate(string lp_eventName);
native void StatEventAddDataString(int lp_statEvent, string lp_key, string lp_value);
native void StatEventAddDataInt(int lp_statEvent, string lp_key, int lp_value);
native void StatEventAddDataFixed(int lp_statEvent, string lp_key, fixed lp_value);
native void StatEventSend(int lp_statEvent);
native int StatEventLastCreated();
native int TransmissionSendForPlayerSelect(playergroup lp_Players, transmissionsource lp_Source, int lp_Target, string lp_portraitActor, string lp_PortraitAnim, soundlink lp_Sound, text lp_Speaker, text lp_Subtitle, fixed lp_Duration, int lp_DurationType, bool lp_WaitUntilDone, int lp_player, bool lp_isSelect);
native void UISetMiniMapBounds(playergroup lp_players, region lp_bounds);
native fixed UnitOrderGetProgress(unit lp_unit);
native fixed UnitBehaviorDurationTotal(unit lp_unit, string lp_behavior);
native unit UnitGroupLoopCurrentDeprecated();
